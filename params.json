{"name":"Madnatter template lib","tagline":"A template library for Codeigniter","body":"Mad Natter Template Library\r\n===============\r\n\r\nA simple template library for Codeigniter\r\n\r\n    Copyright (C) <2012-2013>  <Kyle Coots>\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n \r\n    An open source Template Library for PHP 5.1.6 or newer\r\n  \r\n    @package  \tMadNatter_Template_Lib\r\n    @author\t\tKyle Coots\r\n    @copyright\tCopyright (c) 2012 - 2013, Mad Natter\r\n    @since\t\tVersion 1.0\r\n    @filesource https://github.com/snowballrandom/MadNatter_Template_Lib/\r\n\r\nMore complete tutorial can be found over at my blog site http://www.snowballrandom.com/mad-natter-template-library-for-codeigniter/\r\n\r\nHow to use the Mad Natter Templae Library\r\n\t\t\r\nWe start by loading the template library\r\n    \r\n    $this->load->library('template');\r\n\t\r\nOr \r\n\t\r\n    $autoload['libraries'] = array('template');\r\n\t\t\r\nNow that we have the library loaded we can use it like this.\r\n\t\t        \r\n\t$template_data = $this->template->load('welcome_message');\r\n\t\r\n\t$this->load->view($template_data->template, $template_data);\r\n\t\t\r\n\t\t\r\nAdding Css\r\n\r\nYou css files should be in the directory \"/assets/css/\". \r\n\r\nIf your file is in a different location you can use the second param to allow you to specify the exact location. \r\nNote: you will need to specify the absolute url if using the second param.</p>\r\n\r\n    $this->template->addcss($src, $remote, $attr);\r\n\t\t\r\nLocal file in the \"/assets/css/\" directory\r\n\t\r\n    $this->template->addcss('my_css');\r\n\t\t\r\nNotice that there isn't a need to specify the extension (i.e. \"my_css.css\")\r\n\r\nLoading a remote file or file with different extension\r\n\t\r\n    $this->template->addcss('http://www.example.com/somefolder/someplace/my_css.css', true);\r\n\t\t\r\nAdding extra attributes to the link tag for you css file. You can use an array() or an object.\r\n\t\t\r\n\t$attr = array('charset'=>'utf-8');\r\n\t\r\n\t$this->template->addcss('my_css', false, $attr);\r\n\t\r\nWill produce:\r\n    \r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"http://localhost/assets/css/my_css.css\" charset=\"utf-8\" / >\r\n\t\t\r\nAdding Javascript\r\n\r\nAdding Java script is exactly the same as adding css\r\n\t\r\n    $this->template->addjs($src, $remote, $attr);\r\n\t\t\r\nAdding Meta\r\n\r\n    $this->template->addmeta($meta);\r\n\r\nAdding meta is as simple as passing an array or object to the function\r\n\t\t\t\r\n    $meta = array('charset'=>'utf-8');\r\n\t$this->template->addmeta($meta);\r\n\t\r\nWill produce:\r\n\r\n\r\n    <meta charset=\"utf-8\" >\r\n\r\nOr \r\n\r\n\t$meta = new stdClass;\r\n\t$meta->charset = 'utf-8';\r\n\t$this->template->addmeta($meta);\r\n\r\nWill produce: \r\n    \r\n    <meta charset=\"utf-8\" >\r\n\t\t\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}